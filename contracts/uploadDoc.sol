// SPDX-License-Identifier: MIT

pragma solidity >=0.5.0 <0.9.0;

/**
 * @title Power Generated
 * @dev Store & retrieve power generated by each station
 */
contract uploadDoc {

    // mapping(address => uint256) public power;
    mapping(bytes32 => uint256) private hashes;

    event docAdded(address station, bytes32 hash);

    modifier hashOnlyOnce(bytes32 hash) {
        require(0 == hashes[hash]);
        _;
    }

    function add(bytes32 hash) public hashOnlyOnce(hash) {
        hashes[hash] = block.number;
        emit docAdded(msg.sender, hash);
    }

    /**
    * @return block number where this hash exists or zero
    */
    function validate(bytes32 hash) public view returns (uint256) {
        return hashes[hash];
    }
}
